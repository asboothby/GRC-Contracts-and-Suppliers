<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>import_suppliers</action_name>
        <active>true</active>
        <client>false</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition/>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Import  Suppliers</name>
        <onclick/>
        <order>150</order>
        <script><![CDATA[var attachment = new GlideRecord('sys_attachment');
attachment.addQuery('table_sys_id', current.sys_id);
attachment.addQuery('file_name', 'SLF Bulk Upload.xlsx');
attachment.query();
if (attachment.next())
{
	var attachmentId = attachment.getValue('sys_id');

	var parser = new sn_impex.GlideExcelParser();
	var xlAttachment = new GlideSysAttachment();
	var attachmentStream = xlAttachment.getContentStream(attachmentId);
	parser.setSource(attachmentStream);
	var sheetList = parser.getSheetNames();

	parser.setSheetNumber("0");
	
	if(parser.parse())
	{
		var headers = parser.getColumnHeaders();
		var currentSuppliers = current.getValue('cui_suppliers');
		var supplierList = [];
		supplierList = currentSuppliers.split(',');
		while(parser.next())
		{
			var row = parser.getRow();
			gs.info(row[headers[0]] + '\t|| ' + row[headers[1]]);
			grSupplier = new GlideRecord('x_631631_grc_contr_supplier');
			grSupplier.addQuery('corporate_id', row[headers[0]]);
			grSupplier.query();
			if(grSupplier.next())
			{
				supplierList.push(grSupplier.getValue('sys_id'));
			}
		}
		gs.info('supplierList: ' + supplierList.join(','));
		if(supplierList.length > 0)
		{
			var arrayUtil = new global.ArrayUtil();
			var newSupplierList = arrayUtil.unique(supplierList);
			gs.info('newSupplierList: ' + newSupplierList.join(','));
			
			current.cui_suppliers =	newSupplierList.join(',');
			current.update();
		}
	}
	else
	{
		gs.info(parser.getErrorMessage());
	}
}

]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-25 10:18:32</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>574869dd972111108c6e7b771153af65</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>Import  Suppliers</sys_name>
        <sys_overrides/>
        <sys_package display_value="GRC Contracts and Suppliers" source="x_631631_grc_contr">aa57675a97dd11108c6e7b771153af5d</sys_package>
        <sys_policy/>
        <sys_scope display_value="GRC Contracts and Suppliers">aa57675a97dd11108c6e7b771153af5d</sys_scope>
        <sys_update_name>sys_ui_action_574869dd972111108c6e7b771153af65</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-08-25 17:42:46</sys_updated_on>
        <table>x_631631_grc_contr_contract</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
