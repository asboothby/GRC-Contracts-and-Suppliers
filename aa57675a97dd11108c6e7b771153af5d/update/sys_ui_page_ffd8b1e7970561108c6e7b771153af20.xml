<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[var rows = gel('rows').value;
rows = jQuery.parseJSON(rows);
buildCards(rows);
jQuery('a[href], [tabindex]')[0].focus();

function buildCards(data) {
	var i = 0;
	if (data[0] != '') {
		while (i < data.length) {
			var info = buildBody(data, i);
			if (info.name != '') {
				var window = new Array();
				window[i] = createGlideWindow(data[i].inst_id, 'id' + data[i].inst_id, true, info.name, info.body);
				i++;
			}
		}
	}
}

function showAll(instance, type) {
	var url = 'assessment_list.do?sysparm_show=all';
	window.location = url;
}
function showMine(instance, type) {
	var url = 'assessment_list.do?sysparm_show=user';
	window.location = url;
}

function takeAssessment(instance, type) {
	var url = 'assessment_take2.do?sysparm_assessable_sysid=' + instance + '&sysparm_assessable_type=' + type;
	window.location = url;
}

function createGlideWindow(div, id, readOnly, title, body) {
	var w = new GlideWindow(id, readOnly);
	w.setPosition('relative');
	w.setTitle(title);
	w.setSize("100%", "");
	w.setBody(body);
	w.setFontSize(12);
	w.setFontWeight("normal");
	w.setHeaderColor("");
	w.setClassName("drag_section");
	w.insert(div);
	if(w.getWindowDOM()){
		w.getWindowDOM().style.tableLayout = "fixed";
		w.getWindowDOM().setAttribute("tabindex", "0");
	}
	if(w.getHeader()){
		w.getHeader().style.tableLayout = "fixed";
	}

	if(w.getTitle()){
		w.getTitle().style.overflow = "hidden";
		w.getTitle().style.textOverflow = "ellipsis";
	}

	return w;
}

function buildBody(data, id) {
	var viewSurveyLink = 'asmt_metric_type.do?sys_id=' + data[id].mt_id + '&sysparm_view=' + data[id].mt_evaluation_method;
	var takeSurveyLink = 'assessment_take2.do?sysparm_assessable_sysid=' + data[id].inst_id + '&amp;sysparm_assessable_type=' + data[id].mt_id;
	var takeSurveyButton = 'takeAssessment(\'' + data[id].inst_id + '\',\'' + data[id].mt_id + '\');';
	var desc = data[id].inst_description.escapeHTML();
	var name = '';
	var body = '';
	if (typeof desc  != "undefined") {
	
		var assignedToMsg = getMessage("Assigned to");
		var stateMsg = getMessage("State");
		var dueDateMsg = getMessage("Due date");
	
		desc = desc.replace(/\n/g, '<br/>');
		desc = desc.replace(/\r/g, '');

		var buttonText = "";
		var gwtMessage = new GwtMessage();
		if (data[id].mt_evaluation_method != "testplan") {
			var datum = data[id].mt_evaluation_method_display;
			if (data[id].inst_preview == "true")
				buttonText = gwtMessage.getMessage("Preview {0}", datum);
			else if (data[id].inst_state_id == "complete")
				buttonText = gwtMessage.getMessage("Modify {0}", datum);
			else
				buttonText = gwtMessage.getMessage("Take {0}", datum);
		}
		else if (data[id].inst_state_id == "complete")
			buttonText = getMessage("Retest");
		else if (data[id].inst_preview == "false")
			buttonText = getMessage("Start Testing");

		name += '<h2 style="margin: 0 0;font-size: 17px;">' + data[id].mt_name.escapeHTML() + '</h2>';
		body += '<table style="width: 100%; vertical-align:top;">';
		body += '<tbody><tr style="vertical-align:top;">';
		body += '<td style="text-align: center; vertical-align: top;" class="homepage_category_only_image_cell">';
		body += '<span style="margin: 0px 10px 0px 0px; padding:10px 10px 10px 10px;">';
		body += '<img alt="" aria-label="'+data[id].mt_evaluation_method_display+' instance icon" src="images/assessment/checkClipboard' + data[id].inst_color + '.png" />';
		body += '</span>';
		body += '</td>';
		if ("${gs.getUserID()}" == data[id].inst_user) {
			body += '<td style="max-width: 0; overflow: hidden; text-overflow: ellipsis;vertical-align: top; white-space: nowrap; width: 100%" class="homepage_category_only_description_cell">';
			body += '<span><a target="_self" style="color:#000;" href="' + takeSurveyLink + '">';
		} else {
			body += '<td style="max-width: 0; overflow: hidden; text-overflow: ellipsis;vertical-align: top; white-space: nowrap; width: 100%" class="homepage_category_only_description_cell">';
			body += '<span><a target="_self" style="color:#000;" href="' + viewSurveyLink + '">';
		}
		body += '<h3 style="display: inherit; margin: 10px 0px 0px 0px; font-size: larger; font-weight: normal; overflow:hidden; text-overflow:ellipsis;">';
		body += data[id].mt_name.escapeHTML();
		body += '</h3>';
		body += '</a></span><br>';
		body += '<span style="color:#000; white-space:normal;">' + assignedToMsg + ': </span><span style="color:#595959; white-space:normal;">' + data[id].user_name.escapeHTML() + '</span><br/>';
		body += '<span style="color:#000; white-space:normal;">' + stateMsg + ': </span><span style="color:#595959; white-space:normal;">' + data[id].inst_state + '</span><br/>';
		body += '<span style="color:#000; white-space:normal;">' + dueDateMsg + ': </span><span style="color:' + data[id].inst_color + '; white-space:normal;">' + data[id].inst_due_date + '</span><br/>';
		if(data[id].inst_trigger_id){
		body += '<span style="color:#000; white-space:normal;">' + data[id].inst_trigger_table + ': </span><span style="color:#595959; white-space:normal;">' + data[id].inst_trigger_id + '</span><br/>';
		}
		body += '<span style="color:#595959; white-space:normal;">' + desc + '</span>';
		body += '</td></tr>';
		body += '<tr><td colspan="2" align="right">';
		if ("${gs.getUserID()}" == data[id].inst_user)
			body += '<button id="take_survey_button_'+ data[id].inst_id +'" class="btn btn-default" onClick="' + takeSurveyButton + '" style="font-size: inherit; margin: 3px 5px;" type="submit">' + buttonText + '</button>';
		else
			body += '&nbsp';
		body += '</td></tr></tbody></table>';
	}

	return {body: body, name: name};
}]]></client_script>
        <description>Assessment card view</description>
        <direct>false</direct>
        <endpoint>x_631631_grc_contr_supplier_assessment_list.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
<!-- 	<j:if test="${GlideMobileExtensions.getDeviceType() != 'doctype'}">
		<g:requires name="scripts/lib/jquery_includes.js" inline="true" />
	</j:if> -->
    <g2:evaluate var="jvar_rows" object="true" jelly="true">
 		var title = gs.getMessage('My Assessments and Surveys');
		var none = 'No assessments or surveys for you at the moment';
		var useSysparmNone = false;
		var sanitized_sysparm_none = SNC.GlideHTMLSanitizer.sanitize(jelly.sysparm_none);
		var sanitized_sysparm_title = SNC.GlideHTMLSanitizer.sanitize(jelly.sysparm_title);
		var sanitized_sysparm_query = jelly.sysparm_query;
		var sanitized_sysparm_show = SNC.GlideHTMLSanitizer.sanitize(jelly.sysparm_show);
        if (sanitized_sysparm_none $[AMP]$[AMP] sanitized_sysparm_none!="undefined") {
            none = sanitized_sysparm_none;
            useSysparmNone = true;
        }
       	if (sanitized_sysparm_title $[AMP]$[AMP] sanitized_sysparm_title!="undefined")
            title = sanitized_sysparm_title;
        // Query twice, once for items to take, once for items that they can yet modify
        var i = 0;
        var dividers = '';
        var dataArr = new Array();
        var background = "";
        //if (gs.getProperty("glide.ui.doctype") + '' == 'true')
        //    var background = "background: #FCFCFC;";
        for (var loopCounter = 0; loopCounter != 2; ++loopCounter) {
	       var gr = new GlideRecord("asmt_assessment_instance");
	       gr.initialize();
	        gr.addQuery("metric_type.active", true);
		gr.addQuery("due_date", '>=', new GlideDateTime().getLocalDate().getValue());
	        gr.addQuery("metric_type.publish_state", "published");
	        gr.addQuery("preview", false);
	        gr.addQuery("metric_type.evaluation_method", "!=", "attestation_v2");
	        gr.addQuery("metric_type.evaluation_method", "!=", "risk_assessment");
			//Customization
<!-- 			gr.addQuery("metric_type", "2d27804e971611108c6e7b771153afe1"); -->
			//End Customization

	        if (loopCounter == 0)
		        gr.addEncodedQuery("stateINready,wip");
	        else {
		        gr.addQuery("state", "complete");
		        gr.addQuery("metric_type.allow_retake", "true");
	        }
	        if (sanitized_sysparm_show != "all" || !gs.hasRole('assessment_admin'))
	            gr.addQuery("user", "javascript:gs.getUserID()");
	        if (sanitized_sysparm_query)
	            gr.addEncodedQuery(sanitized_sysparm_query);
	        gr.orderByDesc('state');
	        gr.orderBy('due_date');
	        gr.orderBy('sys_created_on');
	        gr.query();
	        if (gr.getRowCount() == 0)
	        	if (loopCounter == 0)
	        		continue;

			if (i == 0) {
		        if (gr.getRowCount() == 0)
		            dividers = '<div style="padding: 0 15px;"><h2>' + (useSysparmNone ? GlideStringUtil.escapeHTML(none) : GlideStringUtil.escapeHTML(gs.getMessage('No assessments or surveys for you at the moment'))) + '</h2></div>';
		        else {
		            dividers = '<div class='container-fluid'>';
		        }
	        }

	        while (gr.next()) {
				var filterSurveyInstance = new global.AssessmentUtils().filterSurvey(gr);
				if (!filterSurveyInstance) {
					if (i%3 === 0)
						dividers += '<div class="row">';

					var record = {};
					var mt = new GlideRecord("asmt_metric_type");
					mt.get(gr.metric_type);
					var user = new GlideRecord("sys_user");
					user.get(gr.user);

					record.inst_id = gr.sys_id.toString();
					record.mt_id = mt.sys_id.toString();
					record.mt_name = mt.name.toString();
					record.user_name = user.name.toString();
					record.inst_user = gr.user.toString();
					record.inst_state_id = gr.state.getValue().toString();
					record.inst_state = gr.state.getDisplayValueExt().toString();
					record.inst_due_date = gr.due_date.getDisplayValue();
					record.inst_description = mt.description.toString();
					record.mt_evaluation_method_display = mt.evaluation_method.getDisplayValueExt().toString();
					record.mt_evaluation_method = mt.evaluation_method.toString();
					record.inst_preview = gr.preview.toString();
					record.inst_trigger_table = "";
					record.inst_trigger_id = "";
					if (gr.trigger_table) {
						var task_number = gr.trigger_id.task_effective_number;
						record.inst_trigger_table = task_number ? gs.getMessage("Task") : gr.getDisplayValue('trigger_id').split(': ')[0];
						record.inst_trigger_id = task_number ? task_number.toString() : gr.getDisplayValue('trigger_id').split(': ')[1];
					}

					var due = new GlideDateTime(gr.due_date);
					var now = new GlideDateTime().getLocalDate();

					if (now.compareTo(due) == 1)
						record.inst_color = "red";
					else
						record.inst_color = "green";

					dividers += '<div class="col-sm-6 col-lg-4 col-xs-12 col-md-4"><div id="' + record.inst_id + '" style="width: 100%; padding: 5px 5px;"/></div>';
					dataArr.push(record);
					i++;
					if (i%3 === 0)
						dividers += '</div>';
				}
	        }
        }
		dataArr = new JSON().encode(dataArr);
		dividers += '</div>';

        if (gs.hasRole('assessment_admin')) {
            dividers += '<p></p><table class="related_links_container" style="padding: 0 5px; ' + background + '">';
            dividers += '<tbody>';
            dividers += '<tr>';
            dividers += '<td class="related_links">${JS,SAFE:gs.getMessage("Related Links")}</td>';
            dividers += '</tr>';
            dividers += '<tr>';
            if (sanitized_sysparm_show != "all")
                dividers += '<td><a id="showall" tabindex="0" onclick="showAll()" class="navigation_link action_context">${JS,SAFE:gs.getMessage("Show all")}</a></td>';
            else
                dividers += '<td><a id="showall" tabindex="0" onclick="showMine()" class="navigation_link action_context">${JS,SAFE:gs.getMessage("Show assigned to me")}</a></td>';
            dividers += '</tr>';
            dividers += '</tbody>';
		dividers += '</table>';
        }
    </g2:evaluate>
	<input type="hidden" id="rows" name="rows" value="$[dataArr]" />
    <div style="text-align: center; width: 100%"><h1 data-form-title="$[title]" style="margin: 2px auto;font-size: 17px;">$[HTML:title]</h1></div>
    <g2:no_escape>
        $[dividers]
    </g2:no_escape>
</j:jelly>]]></html>
        <name>supplier_assessment_list</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-22 10:54:59</sys_created_on>
        <sys_id>ffd8b1e7970561108c6e7b771153af20</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>supplier_assessment_list</sys_name>
        <sys_package display_value="GRC Contracts and Suppliers" source="x_631631_grc_contr">aa57675a97dd11108c6e7b771153af5d</sys_package>
        <sys_policy/>
        <sys_scope display_value="GRC Contracts and Suppliers">aa57675a97dd11108c6e7b771153af5d</sys_scope>
        <sys_update_name>sys_ui_page_ffd8b1e7970561108c6e7b771153af20</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-02-22 11:14:03</sys_updated_on>
    </sys_ui_page>
</record_update>
